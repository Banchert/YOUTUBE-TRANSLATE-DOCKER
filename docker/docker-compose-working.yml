services:
  # Frontend React Application
  frontend:
    build: 
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  # Backend FastAPI Application
  backend:
    build: 
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ../uploads:/app/uploads
      - ../output:/app/output
      - ../logs:/app/logs
    environment:
      - DEBUG=False
      - REDIS_URL=redis://redis:6379
      - TRANSLATION_SERVICE_URL=http://libretranslate:5000
      - WHISPER_SERVICE_URL=http://whisper-service:5001
      - TTS_SERVICE_URL=http://tts-service:5002
    depends_on:
      - redis
      - libretranslate
      - whisper-service
      - tts-service
    networks:
      - app-network
    restart: unless-stopped

  # Whisper Speech-to-Text Service
  whisper-service:
    build:
      context: ../processing/whisper
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    volumes:
      - ../uploads:/app/uploads
      - whisper_cache:/root/.cache/whisper
    environment:
      - WHISPER_MODEL=base
      - WHISPER_DEVICE=cpu
    networks:
      - app-network
    restart: unless-stopped

  # TTS Service
  tts-service:
    build:
      context: ../processing/tts
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
    volumes:
      - ../uploads:/app/uploads
      - ../output:/app/output
      - tts_cache:/root/.cache/tts
    environment:
      - TTS_MODEL=tts_models/th/mai_female/glow-tts
      - TTS_DEVICE=cpu
    networks:
      - app-network
    restart: unless-stopped

  # LibreTranslate Service
  libretranslate:
    image: libretranslate/libretranslate:latest
    ports:
      - "5000:5000"
    environment:
      - LT_CHAR_LIMIT=25000
      - LT_REQ_LIMIT=200
      - LT_LOAD_ONLY=th,en
      - LT_DEBUG=false
      - LT_API_KEYS=false
    networks:
      - app-network
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - app-network
    restart: unless-stopped

volumes:
  redis_data:
  whisper_cache:
  tts_cache:

networks:
  app-network:
    driver: bridge 