services:
  # Frontend React Application
  frontend:
    build: 
      context: ../frontend
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend FastAPI Application
  backend:
    build: 
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ../uploads:/app/uploads
      - ../output:/app/output
      - ../logs:/app/logs
      - /tmp:/tmp
    environment:
      - DEBUG=False
      - REDIS_URL=redis://redis:6379
      - TRANSLATION_SERVICE_URL=http://libretranslate:5000
      - WHISPER_SERVICE_URL=http://whisper-service:5001
      - TTS_SERVICE_URL=http://tts-service:5002
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/youtube_translator
      - MAX_WORKERS=4
      - WORKER_TIMEOUT=300
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      libretranslate:
        condition: service_healthy
      whisper-service:
        condition: service_healthy
      tts-service:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  # Whisper Speech-to-Text Service
  whisper-service:
    build:
      context: ../processing/whisper
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    volumes:
      - ../uploads:/app/uploads
      - ../temp:/app/temp
      - whisper_cache:/root/.cache/whisper
    environment:
      - WHISPER_MODEL=medium
      - WHISPER_DEVICE=cuda
      - MAX_WORKERS=2
      - WORKER_TIMEOUT=600
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 6G
          cpus: '3.0'
        reservations:
          memory: 4G
          cpus: '2.0'
      reservations:
        devices:
          - driver: nvidia
            count: 1
            capabilities: [gpu]

  # TTS Service
  tts-service:
    build:
      context: ../processing/tts
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
    volumes:
      - ../uploads:/app/uploads
      - ../output:/app/output
      - tts_cache:/root/.cache/tts
    environment:
      - TTS_MODEL=tts_models/th/mai_female/glow-tts
      - TTS_DEVICE=cpu
      - MAX_WORKERS=2
      - WORKER_TIMEOUT=300
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  # LibreTranslate Service
  libretranslate:
    image: libretranslate/libretranslate:latest
    ports:
      - "5000:5000"
    environment:
      - LT_CHAR_LIMIT=50000
      - LT_REQ_LIMIT=500
      - LT_BATCH_LIMIT=50
      - LT_THREADS=4
      - LT_FRONTEND_LANGUAGE_SOURCE=auto
      - LT_FRONTEND_LANGUAGE_TARGET=th
      - LT_UPDATE_MODELS=true
      - LT_LOAD_ONLY=th,en,zh,ja,ko,es,fr,de
      - LT_DEBUG=false
      - LT_API_KEYS=false
      - LT_MASTER_KEY=your-master-key-here
      - LT_DISABLE_FILES_TRANSLATION=false
      - LT_DISABLE_WEB_UI=false
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/languages"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  # Redis for caching and task queue
  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru --save 900 1 --save 300 10 --save 60 10000
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=youtube_translator
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d youtube_translator"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local
  whisper_cache:
    driver: local
  tts_cache:
    driver: local

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16