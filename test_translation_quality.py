#!/usr/bin/env python3
# test_translation_quality.py - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡πÅ‡∏•‡∏∞ TTS

import requests
import json
import time

def test_translation_step_by_step():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•"""
    print("üîç ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡πÅ‡∏•‡∏∞ TTS ‡πÅ‡∏ö‡∏ö‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î")
    print("=" * 60)
    
    # ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å transcript
    test_text = "The Bear and the Bee. Everybody knows that bears love honey. One day Mr. Bear looks in his cupboard and he can't find any honey."
    
    print(f"üìù ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö (‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©):")
    print(f"   '{test_text}'")
    print()
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•
    print("üî§ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤")
    try:
        translate_payload = {
            "q": test_text,
            "source": "en",
            "target": "th"
        }
        
        response = requests.post(
            "http://localhost:5000/translate",
            json=translate_payload,
            timeout=15
        )
        
        if response.status_code == 200:
            result = response.json()
            translated_text = result.get("translatedText", "")
            print(f"   ‚úÖ ‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:")
            print(f"   '{translated_text}'")
            print()
            
            # ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•
            if len(translated_text) < len(test_text) * 0.3:
                print("   ‚ö†Ô∏è ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏õ‡∏•‡∏™‡∏±‡πâ‡∏ô‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥")
            elif "‡∏´‡∏°‡∏µ" in translated_text and "‡∏ô‡πâ‡∏≥‡∏ú‡∏∂‡πâ‡∏á" in translated_text:
                print("   ‚úÖ ‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏î‡∏π‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ ‡∏´‡∏°‡∏µ ‡πÅ‡∏•‡∏∞ ‡∏ô‡πâ‡∏≥‡∏ú‡∏∂‡πâ‡∏á)")
            else:
                print("   ‚ö†Ô∏è ‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≥‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç)")
            
        else:
            print(f"   ‚ùå ‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: HTTP {response.status_code}")
            print(f"   Response: {response.text}")
            return False
            
    except Exception as e:
        print(f"   ‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•: {e}")
        return False
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö TTS
    print("üîä ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Text-to-Speech")
    try:
        # ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏ó‡∏¢‡∏™‡∏±‡πâ‡∏ô‡πÜ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö
        test_thai_text = "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å"
        
        tts_payload = {
            "text": test_thai_text,
            "language": "th",
            "use_edge_tts": True
        }
        
        response = requests.post(
            "http://localhost:5002/synthesize",
            json=tts_payload,
            timeout=30
        )
        
        if response.status_code == 200:
            result = response.json()
            audio_file = result.get("audio_file")
            file_size = result.get("file_size", 0)
            voice_used = result.get("voice_used", "unknown")
            
            print(f"   ‚úÖ TTS ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:")
            print(f"   - ‡πÑ‡∏ü‡∏•‡πå: {audio_file}")
            print(f"   - ‡∏Ç‡∏ô‡∏≤‡∏î: {file_size} bytes")
            print(f"   - ‡πÄ‡∏™‡∏µ‡∏¢‡∏á: {voice_used}")
            
            # ‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á
            if file_size < 1000:
                print("   ‚ö†Ô∏è ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏•‡πá‡∏Å‡∏ú‡∏¥‡∏î‡∏õ‡∏Å‡∏ï‡∏¥")
            else:
                print("   ‚úÖ ‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏õ‡∏Å‡∏ï‡∏¥")
            
        else:
            print(f"   ‚ùå TTS ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: HTTP {response.status_code}")
            print(f"   Response: {response.text}")
            return False
            
    except Exception as e:
        print(f"   ‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô TTS: {e}")
        return False
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö TTS ‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÅ‡∏õ‡∏•‡πÅ‡∏•‡πâ‡∏ß
    print("üéØ ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 3: ‡∏ó‡∏î‡∏™‡∏≠‡∏ö TTS ‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÅ‡∏õ‡∏•‡πÅ‡∏•‡πâ‡∏ß")
    try:
        tts_translated_payload = {
            "text": translated_text[:100],  # ‡πÉ‡∏ä‡πâ‡πÅ‡∏Ñ‡πà 100 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÅ‡∏£‡∏Å
            "language": "th",
            "use_edge_tts": True
        }
        
        response = requests.post(
            "http://localhost:5002/synthesize",
            json=tts_translated_payload,
            timeout=30
        )
        
        if response.status_code == 200:
            result = response.json()
            print(f"   ‚úÖ TTS ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏õ‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
            print(f"   - ‡πÑ‡∏ü‡∏•‡πå: {result.get('audio_file')}")
            
            # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
            audio_file = result.get('audio_file')
            download_response = requests.get(f"http://localhost:5002/download/{audio_file}")
            
            if download_response.status_code == 200:
                print(f"   ‚úÖ ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÑ‡∏î‡πâ")
                print(f"   - ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ó‡∏µ‡πà‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î: {len(download_response.content)} bytes")
            else:
                print(f"   ‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á: HTTP {download_response.status_code}")
            
        else:
            print(f"   ‚ùå TTS ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏õ‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: HTTP {response.status_code}")
            
    except Exception as e:
        print(f"   ‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô TTS ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏õ‡∏•: {e}")
    
    print("\n" + "=" * 60)
    print("üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:")
    print("   ‚úÖ ‡∏´‡∏≤‡∏Å‡∏ó‡∏∏‡∏Å‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ú‡πà‡∏≤‡∏ô = ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
    print("   ‚ö†Ô∏è ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô = ‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤")
    print("   ‚ùå ‡∏´‡∏≤‡∏Å‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß = ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤")
    
    return True

def test_tts_speed_settings():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏Ç‡∏≠‡∏á TTS"""
    print("\nüéõÔ∏è ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß TTS")
    print("=" * 40)
    
    test_sentences = [
        "‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏™‡∏±‡πâ‡∏ô‡πÜ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö",
        "‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏¢‡∏≤‡∏ß‡∏´‡∏ô‡πà‡∏≠‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ß‡πà‡∏≤‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏à‡∏∞‡∏û‡∏π‡∏î‡πÄ‡∏£‡πá‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡πâ‡∏≤ ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà",
        "‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏π‡∏î‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏±‡∏ç‡∏ç‡∏≤‡∏õ‡∏£‡∏∞‡∏î‡∏¥‡∏©‡∏ê‡πå‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡∏ü‡∏±‡∏á‡∏à‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÑ‡∏î‡πâ"
    ]
    
    for i, sentence in enumerate(test_sentences, 1):
        print(f"\nüìù ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡∏ó‡∏µ‡πà {i}:")
        print(f"   '{sentence[:50]}{'...' if len(sentence) > 50 else ''}'")
        
        try:
            payload = {
                "text": sentence,
                "language": "th",
                "use_edge_tts": True
            }
            
            start_time = time.time()
            response = requests.post(
                "http://localhost:5002/synthesize",
                json=payload,
                timeout=30
            )
            end_time = time.time()
            
            if response.status_code == 200:
                result = response.json()
                processing_time = end_time - start_time
                file_size = result.get('file_size', 0)
                
                # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏ß‡∏•‡∏≤
                text_length = len(sentence)
                ratio = file_size / text_length if text_length > 0 else 0
                
                print(f"   ‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:")
                print(f"   - ‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•: {processing_time:.2f} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ")
                print(f"   - ‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå: {file_size} bytes")
                print(f"   - ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏™‡πà‡∏ß‡∏ô: {ratio:.2f} bytes/char")
                
                if processing_time > 10:
                    print(f"   ‚ö†Ô∏è ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏≤‡∏ô (>{processing_time:.1f}s)")
                if file_size < text_length * 100:  # ‡∏´‡∏¢‡∏≤‡∏ö‡πÜ
                    print(f"   ‚ö†Ô∏è ‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏≠‡∏≤‡∏à‡∏™‡∏±‡πâ‡∏ô/‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ")
                
            else:
                print(f"   ‚ùå ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß: HTTP {response.status_code}")
                
        except Exception as e:
            print(f"   ‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

def main():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å"""
    print("üß™ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡πÅ‡∏•‡∏∞ TTS")
    print("üìÖ " + time.strftime("%Y-%m-%d %H:%M:%S"))
    print()
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
    services = [
        ("LibreTranslate", "http://localhost:5000/languages"),
        ("TTS Service", "http://localhost:5002/health"),
        ("Backend API", "http://localhost:8000/health")
    ]
    
    all_services_ok = True
    for name, url in services:
        try:
            response = requests.get(url, timeout=5)
            if response.status_code == 200:
                print(f"‚úÖ {name}: ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥")
            else:
                print(f"‚ùå {name}: HTTP {response.status_code}")
                all_services_ok = False
        except Exception as e:
            print(f"‚ùå {name}: ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ - {e}")
            all_services_ok = False
    
    if not all_services_ok:
        print("\n‚ö†Ô∏è ‡∏ö‡∏≤‡∏á‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô - ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå")
    
    print("\n" + "=" * 60)
    
    # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏´‡∏•‡∏±‡∏Å
    test_translation_step_by_step()
    test_tts_speed_settings()
    
    print("\nüéØ ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:")
    print("   1. ‡∏´‡∏≤‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏ú‡∏¥‡∏î: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö LibreTranslate settings")
    print("   2. ‡∏´‡∏≤‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ: ‡∏õ‡∏£‡∏±‡∏ö TTS speed/rate settings")
    print("   3. ‡∏´‡∏≤‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏õ‡∏•‡∏Å: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö language detection")
    print("   4. ‡∏´‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏•‡πá‡∏Å: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö audio encoding")

if __name__ == "__main__":
    main()
