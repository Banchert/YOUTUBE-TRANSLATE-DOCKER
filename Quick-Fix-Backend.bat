@echo off
chcp 65001 >nul

echo.
echo ============================================
echo    р╣Бр╕Бр╣Йр╣Др╕Вр╕Ыр╕▒р╕Нр╕лр╕▓р╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н Backend
echo ============================================
echo.

echo [INFO] р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╣Бр╕ер╕░р╣Ар╕гр╕┤р╣Ир╕б Docker Services...

:: Check if Docker is running
echo [1/5] р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ Docker...
docker info >nul 2>&1
if %errorLevel% neq 0 (
    echo [ERROR] Docker р╣Др╕бр╣Ир╕Чр╕│р╕Зр╕▓р╕Щ!
    echo.
    echo ЁЯТб р╕Бр╕▓р╕гр╣Бр╕Бр╣Йр╣Др╕В:
    echo    1. р╣Ар╕Ыр╕┤р╕Ф Docker Desktop
    echo    2. р╕гр╕нр╣Гр╕лр╣Йр╣Бр╕кр╕Фр╕З "Docker Desktop is running"
    echo    3. р╕гр╕▒р╕Щр╣Др╕Яр╕ер╣Мр╕Щр╕╡р╣Йр╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕З
    echo.
    pause
    exit /b 1
)
echo [SUCCESS] Docker р╕Юр╕гр╣Йр╕нр╕бр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ

:: Go to docker directory
echo [2/5] р╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╣Др╕Ыр╕вр╕▒р╕З docker directory...
cd /d "d:\YOUTUBE-TRANSLATE\docker"
if %errorLevel% neq 0 (
    echo [ERROR] р╣Др╕бр╣Ир╕Юр╕Ър╣Вр╕Яр╕ер╣Ар╕Фр╕нр╕гр╣М docker
    pause
    exit /b 1
)

:: Stop existing containers first
echo [3/5] р╕лр╕вр╕╕р╕Ф containers р╣Ар╕Фр╕┤р╕б...
docker compose -f docker-compose-simple.yml down >nul 2>&1

:: Start services
echo [4/5] р╣Ар╕гр╕┤р╣Ир╕б Docker Services...
docker compose -f docker-compose-simple.yml up -d

if %errorLevel% neq 0 (
    echo [ERROR] р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Ар╕гр╕┤р╣Ир╕бр╕Ър╕гр╕┤р╕Бр╕▓р╕гр╣Др╕Фр╣Й
    echo.
    echo ЁЯФН р╕ер╕нр╕Зр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ:
    echo    docker compose -f docker-compose-simple.yml logs
    pause
    exit /b 1
)

:: Wait for services to start
echo [5/5] р╕гр╕нр╣Гр╕лр╣Йр╕Ър╕гр╕┤р╕Бр╕▓р╕гр╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щ...
echo р╕Бр╕│р╕ер╕▒р╕Зр╕гр╕н 30 р╕зр╕┤р╕Щр╕▓р╕Чр╕╡...
timeout /t 30 >nul

:: Test backend
echo.
echo р╕Чр╕Фр╕кр╕нр╕Ъ Backend...
curl -s http://localhost:8000/health >nul
if %errorLevel% equ 0 (
    echo [SUCCESS] тЬЕ Backend р╕Юр╕гр╣Йр╕нр╕бр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ!
) else (
    echo [WARNING] тЪая╕П Backend р╕вр╕▒р╕Зр╣Др╕бр╣Ир╕Юр╕гр╣Йр╕нр╕б - р╕ер╕нр╕Зр╕гр╕нр╕нр╕╡р╕Б 30 р╕зр╕┤р╕Щр╕▓р╕Чр╕╡
)

:: Show status
echo.
echo ===============================================
echo               р╕кр╕Цр╕▓р╕Щр╕░р╕Ър╕гр╕┤р╕Бр╕▓р╕г
echo ===============================================
docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

echo.
echo ===============================================
echo                р╕ер╕┤р╕Зр╕Бр╣Мр╕Чр╕Фр╕кр╕нр╕Ъ
echo ===============================================
echo Backend API:      http://localhost:8000/docs
echo Health Check:     http://localhost:8000/health  
echo Frontend:         http://localhost:3000
echo Translation API:  http://localhost:5000
echo.

set /p test_now="р╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ъ Video Interface р╕Хр╕нр╕Щр╕Щр╕╡р╣Йр╕лр╕гр╕╖р╕нр╣Др╕бр╣И? (y/n): "
if /i "%test_now%"=="y" (
    echo.
    echo р╣Ар╕Ыр╕┤р╕Фр╕лр╕Щр╣Йр╕▓р╕Чр╕Фр╕кр╕нр╕Ъ...
    start "" "d:\YOUTUBE-TRANSLATE\test-video-playback.html"
    timeout /t 2 >nul
    start http://localhost:8000/docs
    echo.
    echo [INFO] р╣Ар╕Ыр╕┤р╕Фр╕лр╕Щр╣Йр╕▓р╕Чр╕Фр╕кр╕нр╕Ър╣Бр╕ер╣Йр╕з - р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Бр╕▓р╕гр╕Чр╕│р╕Зр╕▓р╕Щр╣Гр╕Щр╣Ар╕Ър╕гр╕▓р╕зр╣Мр╣Ар╕Лр╕нр╕гр╣М
)

echo.
echo ЁЯУЛ р╕лр╕▓р╕Бр╕вр╕▒р╕Зр╕бр╕╡р╕Ыр╕▒р╕Нр╕лр╕▓:
echo    1. р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ Docker Desktop р╣Ар╕Ыр╕┤р╕Фр╕нр╕вр╕╣р╣И
echo    2. р╕гр╕н 1-2 р╕Щр╕▓р╕Чр╕╡ р╣Бр╕ер╣Йр╕зр╕ер╕нр╕Зр╣Гр╕лр╕бр╣И
echo    3. р╕Фр╕╣ logs: docker compose logs backend
echo    4. р╕гр╕╡р╕кр╕Хр╕▓р╕гр╣Мр╕Ч: docker compose restart
echo.

cd /d "d:\YOUTUBE-TRANSLATE"
pause
